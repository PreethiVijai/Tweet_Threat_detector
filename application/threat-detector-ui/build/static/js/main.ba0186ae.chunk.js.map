{"version":3,"sources":["components/layout/Header.js","components/pages/RegistrationForm.js","components/pages/RegistrationComponents.js","components/pages/UserFunctions.js","components/pages/Landing.js","components/pages/Navbar.js","components/pages/UserProfile.js","components/pages/Login.js","App.js","registerServiceWorker.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","Header","style","RegistrationForm","props","state","success","message","handleChange","bind","handleArrayChange","handleSubmit","event","this","className","role","onSubmit","Component","RegistrationComponents","renderSuggestion","suggestion","name","username","firstName","lastName","newPassword","onChange","e","setState","target","value","type","checked","console","log","preventDefault","newUser","axios","post","then","response","register","res","history","push","ref","placeholder","required","Landing","localStorage","removeItem","loginRegLink","to","userLink","href","onClick","logOut","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","usertoken","withRouter","UserProfile","errors","token","decoded","jwt_decode","identity","Login","user","setItem","data","catch","err","login","error","noValidate","htmlFor","App","twitter_feed","Navbar","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ba0186ae.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header(){\n  return(\n    <header style={headerStyle}>\n     <h1>THREAT DETECTOR</h1>\n    </header>\n  )\n}\n\nconst headerStyle={\n  background:'#021f31',\n  color:'#fff',\n  textAlign:'center',\n  padding:'10px'\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nexport class RegistrationForm extends Component{\n  constructor(props){\n    super(props);\n\n  this.state={\n    success:'',\n    message:''\n  };\n  this.handleChange = this.handleChange.bind(this);\n  this.handleArrayChange = this.handleArrayChange.bind(this);\n  this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event)\n      {\n      }\n\n      handleArrayChange(event)\n      {\n      }\n\n      handleSubmit(event)\n      {\n      }\n\nrender(){\n  return(\n    <div>\n    <h1>\n      <font color={'#C0C0C0'}>\n        User Registration\n      </font>\n    </h1>\n    <p>\n      <font color={'#A9A9A9'}>\n        Please fill in all the required fields to create a new user account.\n      </font>\n    </p>\n      {this.state.success === false &&\n                 <p className=\"alert alert-danger\" role=\"alert\">\n                     {this.state.message}\n                 </p>}\n                 {this.state.success === true &&\n                 <p className=\"alert alert-success\" role=\"alert\">\n                     User successfully registered\n                 </p>}\n                 {!this.state.success &&\n                 <form onSubmit={this.handleSubmit}>\n                 </form>}\n    </div>\n\n  );\n\n}\n}\n\nexport default RegistrationForm;\n","import React, { Component } from 'react';\nimport { register } from './UserFunctions'\n\n\n\n\n\n\nimport RegistrationForm from './RegistrationForm'\n//constructor\nclass RegistrationComponents extends Component{\n  constructor(props){\n    super(props);\n\nthis.state =\n{\n    username: '',\n    firstName: '',\n    lastName: '',\n    newPassword: '',\n    success: null,\n    message: ''\n};\nthis.onChange = this.onChange.bind(this)\nthis.handleSubmit = this.handleSubmit.bind(this)\n}\n\n\nonChange(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n\nrenderSuggestion = (suggestion) => {\n    return <span>{suggestion.name}</span>;\n  };\n\nhandleChange(event)\n{\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    console.log(value)\n\n    this.setState({ [name]: value });\n\n    return true;\n}\n\nhandleSubmit(event)\n{\n  /*code to persist data into database*/\n    event.preventDefault();\n\n       this.setState({success:'True'});\n       this.setState({message:'Successful'});\n       const newUser = {\n      username: this.state.username,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      newPassword: this.state.newPassword,\n      success: this.state.success,\n      message: this.state.message\n    }\n\n    register(newUser).then(res => {\n      this.props.history.push(`/login`)\n    })\n\n\n\n}\n\nrender() {\n  \treturn (\n\n      <div>\n      <RegistrationForm/>\n    <form  ref=\"simpleForm\" onSubmit={() => this.handleSubmit}>\n    <div  className=\"form-group\">\n\n      <font color={'#A9A9A9'}>\n\n        <label>Username</label>\n        <input type=\"text\" className=\"form-control\" placeholder=\"Username\" name=\"username\" required onChange={() => this.handleChange} />\n      </font>\n    </div>\n    <div  className=\"form-group\">\n\n      <font color={'#A9A9A9'}>\n\n        <label>Password</label>\n        <input type=\"password\" className=\"form-control\" placeholder=\"Password\" name=\"newPassword\" required onChange={() => this.handleChange} />\n      </font>\n    </div>\n    <div  className=\"form-group\">\n\n      <font color={'#A9A9A9'}>\n\n        <label>First Name</label>\n        <input type=\"text\" className=\"form-control\" placeholder=\"First Name\" name=\"firstName\" onChange={() => this.handleChange} />\n      </font>\n    </div>\n    <div  className=\"form-group\">\n\n      <font color={'#A9A9A9'}>\n\n        <label>Last Name</label>\n        <input type=\"text\" className=\"form-control\" placeholder=\"Last Name\" name=\"lastName\" onChange={() => this.handleChange} />\n      </font>\n    </div>\n    <button type=\"submit\" className=\"btn btn-primary\" >Submit</button>\n</form>\n      </div>\n    );\n  }\n}\n\n\n\nexport default RegistrationComponents;\n\n","import axios from 'axios'\n\nexport const register = newUser => {\n  return axios\n    .post('users/register', {\n      username: newUser.username,\n      firstName: newUser.firstName,\n      lastName: newUser.lastName,\n      newPassword: newUser.newPassword,\n      success: newUser.success,\n      message: newUser.message\n    })\n    .then(response => {\n      console.log('Registered')\n    })\n}\n\n\nexport const login = user => {\n  return axios\n    .post('users/login', {\n      username: user.username,\n      newPassword: user.newPassword\n    })\n    .then(response => {\n      localStorage.setItem('usertoken', response.data)\n      return response.data\n    })\n    .catch(err => {\n      console.log(err)\n    })\n}\n\nexport const getProfile = user => {\n  return axios\n    .get('users/profile', {\n      //headers: { Authorization: ` ${this.getToken()}` }\n    })\n    .then(response => {\n      console.log(response)\n      return response.data\n    })\n    .catch(err => {\n      console.log(err)\n    })\n}\n","import React, { Component } from 'react';\n\nclass Landing extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"jumbotron mt-5\">\n          <div className=\"col-sm-8 mx-auto\">\n            <h1 className=\"text-center\">WELCOME</h1>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Landing\n","import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\n\nclass Landing extends Component {\n  logOut(e) {\n    e.preventDefault()\n    localStorage.removeItem('usertoken')\n    this.props.history.push(`/`)\n  }\n\n  render() {\n    const loginRegLink = (\n      <ul className=\"navbar-nav\">\n        <li className=\"nav-item\">\n          <Link to=\"/login\" className=\"nav-link\">\n            Login\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link to=\"/register\" className=\"nav-link\">\n            Register\n          </Link>\n        </li>\n      </ul>\n    )\n\n    const userLink = (\n      <ul className=\"navbar-nav\">\n        <li className=\"nav-item\">\n          <Link to=\"/profile\" className=\"nav-link\">\n            User\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <a href=\"\" onClick={this.logOut.bind(this)} className=\"nav-link\">\n            Logout\n          </a>\n        </li>\n      </ul>\n    )\n\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark rounded\">\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarsExample10\"\n          aria-controls=\"navbarsExample10\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n\n        <div\n          className=\"collapse navbar-collapse justify-content-md-center\"\n          id=\"navbarsExample10\"\n        >\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                Home\n              </Link>\n            </li>\n          </ul>\n          {localStorage.usertoken ? userLink : loginRegLink}\n        </div>\n      </nav>\n    )\n  }\n}\n\nexport default withRouter(Landing)\n","import React, { Component } from 'react'\nimport jwt_decode from 'jwt-decode'\n\nclass UserProfile extends Component {\n  constructor() {\n    super()\n    this.state = {\n      username: '',\n      firstName: '',\n      lastName: '',\n      errors: {}\n    }\n  }\n\n  componentDidMount() {\n    const token = localStorage.usertoken\n    const decoded = jwt_decode(token)\n    this.setState({\n      username: decoded.identity.username,\n      firstName: decoded.identity.firstName,\n      lastName: decoded.identity.lastName\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"jumbotron mt-5\">\n          <div className=\"col-sm-8 mx-auto\">\n            <h1 className=\"text-center\">PROFILE</h1>\n          </div>\n          <table className=\"table col-md-6 mx-auto\">\n            <tbody>\n              <tr>\n                <td>Fist Name</td>\n                <td>{this.state.username}</td>\n              </tr>\n              <tr>\n                <td>Last Name</td>\n                <td>{this.state.firstName}</td>\n              </tr>\n              <tr>\n                <td>Email</td>\n                <td>{this.state.lastName}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default UserProfile\n","import React, { Component } from 'react'\nimport { login } from './UserFunctions'\n\nclass Login extends Component {\n  constructor() {\n    super()\n    this.state = {\n      username: '',\n      newPassword: '',\n      errors: {}\n    }\n    this.onChange = this.onChange.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n  onSubmit(e) {\n    e.preventDefault()\n\n    const user = {\n      username: this.state.username,\n      newPassword: this.state.newPassword\n    }\n\n    login(user).then(res => {\n      if (!res.error) {\n        this.props.history.push(`/profile`)\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-6 mt-5 mx-auto\">\n            <form noValidate onSubmit={this.onSubmit}>\n              <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">User Name</label>\n                <input\n                  type=\"username\"\n                  className=\"form-control\"\n                  name=\"username\"\n                  placeholder=\"Enter User Name\"\n                  value={this.state.username}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"newPassword\">Password</label>\n                <input\n                  type=\"newPassword\"\n                  className=\"form-control\"\n                  name=\"newPassword\"\n                  placeholder=\"newPassword\"\n                  value={this.state.newPassword}\n                  onChange={this.onChange}\n                />\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn btn-lg btn-primary btn-block\"\n              >\n                Sign in\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Login\n","import React, { Component } from 'react';\nimport Header from './components/layout/Header';\nimport RegistrationComponents from './components/pages/RegistrationComponents'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Landing from './components/pages/Landing'\nimport Navbar from './components/pages/Navbar'\nimport UserProfile from './components/pages/UserProfile'\nimport Login from './components/pages/Login'\n\nimport './App.css';\n\nclass App extends Component{\n  state={\n    twitter_feed: [\n\n    ]\n  }\n\nrender(){\n  return(\n    <Router>\n    <div className=\"App\">\n      <Navbar />\n      <Route exact path=\"/\" component={Landing} />\n      <div className=\"container\">\n        <Header/>\n       <Route exact path=\"/register\" component={RegistrationComponents} />\n         <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/profile\" component={UserProfile} />\n      </div>\n    </div>\n    </Router>\n  );\n}\n}\n\n\nexport default App;\n","\n\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}